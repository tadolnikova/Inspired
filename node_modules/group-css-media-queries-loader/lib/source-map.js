"use strict";
const initSourceMaps = (options, getLoaderContext) => {
  var _a;
  const enabled =
    (_a = options.sourceMap) !== null && _a !== void 0
      ? _a
      : getLoaderContext().sourceMap;
  const normalizeSourceMapBefore = (prevSourceMap) => {
    try {
      const { normalizeSourceMap } = require("postcss-loader/dist/utils.js");
      return (
        prevSourceMap &&
        normalizeSourceMap(prevSourceMap, getLoaderContext().context)
      );
    } catch (_a) {
      return prevSourceMap;
    }
  };
  return {
    getOptions: (prevSourceMap) => {
      if (!enabled) {
        return undefined;
      }
      return {
        prev: normalizeSourceMapBefore(prevSourceMap),
        inline: false,
        annotation: false,
        sourcesContent: true,
      };
    },
    onResult: (result) => {
      var _a, _b;
      const map =
        (_b =
          (_a = result === null || result === void 0 ? void 0 : result.map) ===
            null || _a === void 0
            ? void 0
            : _a.toJSON) === null || _b === void 0
          ? void 0
          : _b.call(_a);
      try {
        const {
          normalizeSourceMapAfterPostcss,
        } = require("postcss-loader/dist/utils.js");
        if (enabled && map) {
          return normalizeSourceMapAfterPostcss(
            map,
            getLoaderContext().context
          );
        }
        return map;
      } catch (_c) {
        return map;
      }
    },
  };
};
module.exports = initSourceMaps;
